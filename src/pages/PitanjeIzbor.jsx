import { useNavigation, useRoute } from "@react-navigation/native";
import React, { useState } from "react";
import { Modal, Platform, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from "react-native";
import TarotHeader from "../components/TarotHeader"; // prilagodi putanju ako treba
const oblasti = [
  // ... (ostaje tvoja lista oblasti, nisam dirao)
  {
    naziv: "Ljubav",
    ikonica: "‚ù§Ô∏è",
    pitanja: [
      "Da li me voli?",
      "Kakva je na≈°a buduƒánost?",
      "Da li ƒáemo se pomiriti?",
      "Da li ƒáu uskoro upoznati nekog posebnog?",
      "Kako mogu pobolj≈°ati svoj ljubavni ≈æivot?",
      "Da li je moj partner iskren prema meni?",
    ],
  },
  {
    naziv: "Posao",
    ikonica: "üíº",
    pitanja: [
      "Da li ƒáu dobiti posao koji ≈æelim?",
      "Kakva me karijera ƒçeka?",
      "Da li je vreme za promenu posla?",
      "Kako da napredujem na poslu?",
      "Da li ƒáe moj trud biti prepoznat?",
      "Kako da pronaƒëem posao koji me ispunjava?",
    ],
  },
  {
    naziv: "Zdravlje",
    ikonica: "üßò",
    pitanja: [
      "Da li me oƒçekuje oporavak?",
      "Na ≈°ta treba da obratim pa≈ænju?",
      "Kako da unapredim svoje zdravlje?",
      "Da li je trenutni tretman pravi izbor?",
      "Kako mogu pobolj≈°ati mentalno zdravlje?",
      "Da li treba da tra≈æim drugo mi≈°ljenje?",
    ],
  },
  {
    naziv: "Finansije",
    ikonica: "üí∞",
    pitanja: [
      "Kako da pobolj≈°am svoje finansije?",
      "Da li je pametno ulaganje?",
      "Da li ƒáu imati stabilnost?",
      "Kako da raspola≈æem novcem pametnije?",
      "Da li ƒáu otplatiti dugove?",
      "Da li mi sledi dobitak?",
    ],
  },
  {
    naziv: "Duhovni razvoj",
    ikonica: "üåÄ",
    pitanja: [
      "Koja je moja svrha?",
      "≈†ta mi du≈°a poruƒçuje?",
      "Na ƒçemu treba da radim duhovno?",
      "Koji je sledeƒái korak u mom razvoju?",
      "Kako da pronaƒëem unutra≈°nji mir?",
      "Koja lekcija mi se ponavlja?",
    ],
  },
  {
    naziv: "Porodica i odnosi",
    ikonica: "üè°",
    pitanja: [
      "Kako da pobolj≈°am porodiƒçne odnose?",
      "Da li ƒáe se situacija u porodici smiriti?",
      "Kako da pomognem ƒçlanu porodice?",
      "Da li ƒáe se odnos sa [ime] popraviti?",
      "Kako da budem podr≈°ka partneru/partnerki?",
      "Da li nas oƒçekuje mir u kuƒái?",
    ],
  },
];

function OblastModal({ oblast, visible, onClose, onSelect }) {
  return (
    <Modal visible={visible} transparent animationType="fade">
      <View style={styles.modalOverlay}>
        <View style={styles.modalBox}>
          <Text style={styles.modalTitle}>{oblast.naziv} pitanja</Text>
          <ScrollView style={{ maxHeight: 260 }}>
            {oblast.pitanja.map((p, idx) => (
              <TouchableOpacity
                key={idx}
                style={styles.questionBtn}
                onPress={() => {
                  onSelect(p);
                  onClose();
                }}
                activeOpacity={0.8}
              >
                <Text style={styles.questionText}>{p}</Text>
              </TouchableOpacity>
            ))}
          </ScrollView>
          <TouchableOpacity onPress={onClose} style={styles.closeBtn}>
            <Text style={{ color: "#bbb", fontSize: 18 }}>Zatvori</Text>
          </TouchableOpacity>
        </View>
      </View>
    </Modal>
  );
}

export default function PitanjeIzbor() {
  const navigation = useNavigation();
  const route = useRoute();
  const { layoutTemplate, tip } = route.params || {};

  const [pitanje, setPitanje] = useState("");
  const [openModal, setOpenModal] = useState(null);

  const handleNastavi = () => {
    if (!pitanje.trim()) return;
    navigation.navigate("IzborKarata", {
      layoutTemplate,
      pitanje,
      tip,
    });
  };

  const prikazOblasti =
    tip === "ljubavno"
      ? oblasti.filter((o) => o.naziv === "Ljubav")
      : oblasti;

  return (
    <View style={{ flex: 1, backgroundColor: "#000" }}>
        <TarotHeader
          showBack={true}
          onBack={() => navigation.goBack()}
          showHome={true}
          onHome={() => navigation.navigate("Home")}
        />
      
      {/* Ostatak sadr≈æaja se skroluje ispod headera */}
      <ScrollView
        style={{ flex: 1 }}
        contentContainerStyle={{ paddingBottom: 32}}
        // paddingTop mora biti veƒái od visine headera
      >
        <View style={styles.container}>
          <Text style={styles.infoMsg}>
            Izaberi neko od ponuƒëenih pitanja ili postavi svoje pitanje AI tumaƒçu.
          </Text>
          <View style={styles.oblastiCol}>
            {prikazOblasti.map((oblast, idx) => (
              <View key={oblast.naziv} style={{ width: "100%" }}>
                <TouchableOpacity
                  style={styles.oblastBtn}
                  onPress={() => setOpenModal(idx)}
                  activeOpacity={0.87}
                >
                  <Text style={styles.oblastText}>
                    <Text style={styles.ikona}>{oblast.ikonica}</Text> {oblast.naziv} <Text style={styles.ikona}>{oblast.ikonica}</Text>
                  </Text>
                </TouchableOpacity>
                <OblastModal
                  oblast={oblast}
                  visible={openModal === idx}
                  onClose={() => setOpenModal(null)}
                  onSelect={(p) => {
                    setPitanje(p);
                    setTimeout(handleNastavi, 250);
                  }}
                />
              </View>
            ))}
          </View>
          <Text style={styles.subTitle}>Ili unesi svoje pitanje</Text>
          <TextInput
            value={pitanje}
            onChangeText={setPitanje}
            placeholder="Unesi pitanje"
            placeholderTextColor="#aaa"
            style={styles.input}
          />
          <TouchableOpacity style={styles.nastaviBtn} onPress={handleNastavi}>
            <Text style={styles.nastaviText}>Izbor karata</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  stickyHeader: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    zIndex: 10,
    // Pode≈°avanje visine, mo≈æe≈° je prilagoditi ako menja≈° TarotHeader
    height: Platform.OS === "ios" ? 78 : 70,
    backgroundColor: "#000", // ili "black" za vizuelni kontinuitet
    borderBottomWidth: 1,
    borderBottomColor: "#ffd700",
  },
  container: {
    maxWidth: 400,
    width: "100%",
    alignSelf: "center",
    padding: 20,
    paddingTop: 8,
  },
  infoMsg: {
    color: "#ffd700",
    backgroundColor: "#19191e",
    fontSize: 17,
    fontWeight: "bold",
    padding: 12,
    marginBottom: 18,
    borderRadius: 10,
    textAlign: "center",
  },
  oblastiCol: {
    flexDirection: "column",
    gap: 12,
    alignItems: "center",
    marginBottom: 28,
  },
  oblastBtn: {
    backgroundColor: "#111a",
    borderRadius: 10,
    borderWidth: 1,
    borderColor: "#ffd700",
    paddingVertical: 14,
    marginBottom: 10,
  },
  oblastText: {
    fontSize: 18,
    color: "#ffd700",
    fontWeight: "bold",
    textAlign: "center",
    letterSpacing: 1,
  },
  ikona: { fontSize: 20, color: "#ffd700" },
  modalOverlay: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.7)",
    justifyContent: "center",
    alignItems: "center",
  },
  modalBox: {
    backgroundColor: "#1c1c28",
    borderRadius: 14,
    padding: 22,
    width: 320,
    maxWidth: "90%",
    alignItems: "center",
  },
  modalTitle: {
    fontSize: 19,
    color: "#ffd700",
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 12,
  },
  questionBtn: {
    backgroundColor: "#282842",
    borderRadius: 8,
    paddingVertical: 10,
    paddingHorizontal: 10,
    marginBottom: 6,
    width: 250,
    alignItems: "center",
  },
  questionText: {
    color: "#fff",
    fontSize: 16,
    textAlign: "center",
  },
  closeBtn: {
    alignSelf: "center",
    marginTop: 8,
  },
  subTitle: {
    fontSize: 16,
    color: "#fff",
    marginBottom: 8,
    textAlign: "center",
    marginTop: 24,
    fontWeight: "bold",
  },
  input: {
    backgroundColor: "#1a1a1a",
    borderRadius: 9,
    color: "#ffd700",
    borderWidth: 1,
    borderColor: "#ffd700",
    paddingHorizontal: 14,
    paddingVertical: 11,
    fontSize: 16,
    marginBottom: 18,
    width: "100%",
    alignSelf: "center",
  },
  nastaviBtn: {
    backgroundColor: "#ffd700",
    borderRadius: 9,
    paddingVertical: 13,
    alignItems: "center",
    marginBottom: 18,
  },
  nastaviText: {
    color: "#222",
    fontWeight: "bold",
    fontSize: 17,
  },
});